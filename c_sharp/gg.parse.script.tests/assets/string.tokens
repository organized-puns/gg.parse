// example of somewhat complex string tokenization with error handling

#string_options			= string | err_string_eoln | err_string_eof;

~EOF					= !.;
~EOLN					= ("\r\n" | "\n");	

~str_delim				= '"';

~string_char			= !str_delim, !EOLN, !EOF, .;

string					= str_delim, *string_char, str_delim;

#err_string_eoln		= log_err_string_eoln, err_string_eoln_recover;

~is_string_eoln_err		 = str_delim, *string_char, EOLN;
log_err_string_eoln		 = error "string opened with \" but not properly closed before an end of line was encountered." if is_string_eoln_err;
~err_string_eoln_recover = *(!string, .);

#is_string_eof_err		 = str_delim, *string_char, EOF;
err_string_eof			 = error "string opened with \" but not properly closed before the end of the input." if is_string_eof_err;
// no recovery possible  after EOF

