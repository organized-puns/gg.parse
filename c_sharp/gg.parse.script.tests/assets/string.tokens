// example of somewhat complex string tokenization with error handling

-r string_options			= string | err_string_eoln | err_string_eof;

-a EOF						= !.;
-a EOLN						= ("\r\n" | "\n");	

-a str_delim				= '"';

-a string_chars				= *(!str_delim, !EOLN, !EOF, .);

string						= str_delim, string_chars, str_delim;

-r err_string_eoln			= log_err_string_eoln, err_string_eoln_recover;

-a is_string_eoln_err	    = str_delim, string_chars, EOLN;
log_err_string_eoln			= error "string opened with \" but not properly closed before an end of line was encountered." if is_string_eoln_err;
-a err_string_eoln_recover  = *(!string, .);

-r is_string_eof_err		= str_delim, string_chars, EOF;
err_string_eof				= error "string opened with \" but not properly closed before the end of the input." if is_string_eof_err;

