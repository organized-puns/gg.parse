// example of somewhat complex string tokenization with error handling

#string_options			= string | is_string_eoln_err | is_string_eof_err;

~EOF					= !.;
~EOLN					= ("\r\n" | "\n");	

~str_delim				= '"';

~string_char			= !str_delim, !EOLN, !EOF, .;

string					= str_delim, *string_char, str_delim;

err_string_eoln			= error "string opened with \" but not properly closed before an end of line was encountered." string;
#is_string_eoln_err		= str_delim, *string_char, try EOLN, err_string_eoln;

err_string_eof			= error "string opened with \" but not properly closed before the end of the input." EOF;
#is_string_eof_err		= str_delim, *string_char, try EOF, err_string_eof;